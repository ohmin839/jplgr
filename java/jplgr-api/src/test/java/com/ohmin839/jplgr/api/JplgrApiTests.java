package com.ohmin839.jplgr.api;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.DynamicTest.dynamicTest;

import java.util.Collections;
import java.util.List;
import java.util.stream.Stream;

import org.apache.commons.lang3.tuple.Pair;
import org.junit.jupiter.api.DynamicTest;
import org.junit.jupiter.api.TestFactory;

public class JplgrApiTests {
    @TestFactory
    Stream<DynamicTest> testToPolytonicText() {
        return Stream.of(
            // null or empty
            Pair.of((String)null, ""),
            Pair.of("", ""),
            // large alpha
            Pair.of("A", "Α"),
            Pair.of("A|", "ᾼ"),
            Pair.of("'A", "Ά"),
            Pair.of("`A", "Ὰ"),
            Pair.of("<A", "Ἁ"),
            Pair.of("<A|", "ᾉ"),
            Pair.of("<'A", "Ἅ"),
            Pair.of("<'A|", "ᾍ"),
            Pair.of("<`A", "Ἃ"),
            Pair.of("<`A|", "ᾋ"),
            Pair.of("<~A", "Ἇ"),
            Pair.of("<~A|", "ᾏ"),
            Pair.of(">A", "Ἀ"),
            Pair.of(">A|", "ᾈ"),
            Pair.of(">'A", "Ἄ"),
            Pair.of(">'A|", "ᾌ"),
            Pair.of(">`A", "Ἂ"),
            Pair.of(">`A|", "ᾊ"),
            Pair.of(">~A", "Ἆ"),
            Pair.of(">~A|", "ᾎ"),
            // large epsilon
            Pair.of("E", "Ε"),
            Pair.of("'E", "Έ"),
            Pair.of("`E", "Ὲ"),
            Pair.of("<E", "Ἑ"),
            Pair.of("<'E", "Ἕ"),
            Pair.of("<`E", "Ἓ"),
            Pair.of(">E", "Ἐ"),
            Pair.of(">'E", "Ἔ"),
            Pair.of(">`E", "Ἒ"),
               // large eta
            Pair.of("^E", "Η"),
            Pair.of("^E|", "ῌ"),
            Pair.of("'^E", "Ή"),
            Pair.of("`^E", "Ὴ"),
            Pair.of("<^E", "Ἡ"),
            Pair.of("<^E|", "ᾙ"),
            Pair.of("<'^E", "Ἥ"),
            Pair.of("<'^E|", "ᾝ"),
            Pair.of("<`^E", "Ἣ"),
            Pair.of("<`^E|", "ᾛ"),
            Pair.of("<~^E", "Ἧ"),
            Pair.of("<~^E|", "ᾟ"),
            Pair.of(">^E", "Ἠ"),
            Pair.of(">^E|", "ᾘ"),
            Pair.of(">'^E", "Ἤ"),
            Pair.of(">'^E|", "ᾜ"),
            Pair.of(">`^E", "Ἢ"),
            Pair.of(">`^E|", "ᾚ"),
            Pair.of(">~^E", "Ἦ"),
            Pair.of(">~^E|", "ᾞ"),
            // large iota
            Pair.of("I", "Ι"),
            Pair.of("'I", "Ί"),
            Pair.of("`I", "Ὶ"),
            Pair.of("<I", "Ἱ"),
            Pair.of("<'I", "Ἵ"),
            Pair.of("<`I", "Ἳ"),
            Pair.of("<~I", "Ἷ"),
            Pair.of(">I", "Ἰ"),
            Pair.of(">'I", "Ἴ"),
            Pair.of(">`I", "Ἲ"),
            Pair.of(">~I", "Ἶ"),
            Pair.of("\"I", "Ϊ"),
            // large omicron
            Pair.of("O", "Ο"),
            Pair.of("'O", "Ό"),
            Pair.of("`O", "Ὸ"),
            Pair.of("<O", "Ὁ"),
            Pair.of("<'O", "Ὅ"),
            Pair.of("<`O", "Ὃ"),
            Pair.of(">O", "Ὀ"),
            Pair.of(">'O", "Ὄ"),
            Pair.of(">`O", "Ὂ"),
            // large upsilon
            Pair.of("U", "Υ"),
            Pair.of("'U", "Ύ"),
            Pair.of("`U", "Ὺ"),
            Pair.of("<U", "Ὑ"),
            Pair.of("<'U", "Ὕ"),
            Pair.of("<`U", "Ὓ"),
            Pair.of("<~U", "Ὗ"),
            Pair.of("\"U", "Ϋ"),
            Pair.of("Y", "Υ"),
            Pair.of("'Y", "Ύ"),
            Pair.of("`Y", "Ὺ"),
            Pair.of("<Y", "Ὑ"),
            Pair.of("<'Y", "Ὕ"),
            Pair.of("<`Y", "Ὓ"),
            Pair.of("<~Y", "Ὗ"),
            Pair.of("\"Y", "Ϋ"),
            // large omega
            Pair.of("^O", "Ω"),
            Pair.of("^O|", "ῼ"),
            Pair.of("'^O", "Ώ"),
            Pair.of("`^O", "Ὼ"),
            Pair.of("<^O", "Ὡ"),
            Pair.of("<^O|", "ᾩ"),
            Pair.of("<'^O", "Ὥ"),
            Pair.of("<'^O|", "ᾭ"),
            Pair.of("<`^O", "Ὣ"),
            Pair.of("<`^O|", "ᾫ"),
            Pair.of("<~^O", "Ὧ"),
            Pair.of("<~^O|", "ᾯ"),
            Pair.of(">^O", "Ὠ"),
            Pair.of(">^O|", "ᾨ"),
            Pair.of(">'^O", "Ὤ"),
            Pair.of(">'^O|", "ᾬ"),
            Pair.of(">`^O", "Ὢ"),
            Pair.of(">`^O|", "ᾪ"),
            Pair.of(">~^O", "Ὦ"),
            Pair.of(">~^O|", "ᾮ"),
            // large consonants
            Pair.of("B", "Β"),
            Pair.of("G", "Γ"),
            Pair.of("D", "Δ"),
            Pair.of("Th", "Θ"),
            Pair.of("K", "Κ"),
            Pair.of("L", "Λ"),
            Pair.of("M", "Μ"),
            Pair.of("N", "Ν"),
            Pair.of("NG", "ΓΓ"),
            Pair.of("NK", "ΓΚ"),
            Pair.of("NX", "ΓΞ"),
            Pair.of("NKh", "ΓΧ"),
            Pair.of("X", "Ξ"),
            Pair.of("P", "Π"),
            Pair.of("Ph", "Φ"),
            Pair.of("R", "Ρ"),
            Pair.of("<R", "Ῥ"),
            Pair.of("S", "Σ"),
            Pair.of("T", "Τ"), 
            Pair.of("Ph", "Φ"),
            Pair.of("Kh", "Χ"),
            Pair.of("Ps", "Ψ"),
            // small alpha
            Pair.of("a", "α"),
            Pair.of("a|", "ᾳ"),
            Pair.of("'a", "ά"),
            Pair.of("'a|", "ᾴ"),
            Pair.of("`a", "ὰ"),
            Pair.of("`a|", "ᾲ"),
            Pair.of("~a", "ᾶ"),
            Pair.of("~a|", "ᾷ"),
            Pair.of("<a", "ἁ"),
            Pair.of("<a|", "ᾁ"),
            Pair.of("<'a", "ἅ"),
            Pair.of("<'a|", "ᾅ"),
            Pair.of("<`a", "ἃ"),
            Pair.of("<`a|", "ᾃ"),
            Pair.of("<~a", "ἇ"),
            Pair.of("<~a|", "ᾇ"),
            Pair.of(">a", "ἀ"),
            Pair.of(">a|", "ᾀ"),
            Pair.of(">'a", "ἄ"),
            Pair.of(">'a|", "ᾄ"),
            Pair.of(">`a", "ἂ"),
            Pair.of(">`a|", "ᾂ"),
            Pair.of(">~a", "ἆ"),
            Pair.of(">~a|", "ᾆ"),
            // small epsilon
            Pair.of("e", "ε"),
            Pair.of("'e", "έ"),
            Pair.of("`e", "ὲ"),
            Pair.of("<e", "ἑ"),
            Pair.of("<'e", "ἕ"),
            Pair.of("<`e", "ἓ"),
            Pair.of(">e", "ἐ"),
            Pair.of(">'e", "ἔ"),
            Pair.of(">`e", "ἒ"),
            // small eta
            Pair.of("^e", "η"),
            Pair.of("^e|", "ῃ"),
            Pair.of("'^e", "ή"),
            Pair.of("'^e|", "ῄ"),
            Pair.of("`^e", "ὴ"),
            Pair.of("`^e|", "ῂ"),
            Pair.of("~^e", "ῆ"),
            Pair.of("~^e|", "ῇ"),
            Pair.of("<^e", "ἡ"),
            Pair.of("<^e|", "ᾑ"),
            Pair.of("<'^e", "ἥ"),
            Pair.of("<'^e|", "ᾕ"),
            Pair.of("<`^e", "ἣ"),
            Pair.of("<`^e|", "ᾓ"),
            Pair.of("<~^e", "ἧ"),
            Pair.of("<~^e|", "ᾗ"),
            Pair.of(">^e", "ἠ"),
            Pair.of(">^e|", "ᾐ"),
            Pair.of(">'^e", "ἤ"),
            Pair.of(">'^e|", "ᾔ"),
            Pair.of(">`^e", "ἢ"),
            Pair.of(">`^e|", "ᾒ"),
            Pair.of(">~^e", "ἦ"),
            Pair.of(">~^e|", "ᾖ"),
            // small iota
            Pair.of("i", "ι"),
            Pair.of("'i", "ί"),
            Pair.of("`i", "ὶ"),
            Pair.of("~i", "ῖ"),
            Pair.of("<i", "ἱ"),
            Pair.of("<'i", "ἵ"),
            Pair.of("<`i", "ἳ"),
            Pair.of("<~i", "ἷ"),
            Pair.of(">i", "ἰ"),
            Pair.of(">'i", "ἴ"),
            Pair.of(">`i", "ἲ"),
            Pair.of(">~i", "ἶ"),
            Pair.of("\"i", "ϊ"),
            Pair.of("\"'i", "ΐ"),
            Pair.of("\"`i", "ῒ"),
            Pair.of("\"~i", "ῗ"),
            // small omicron
            Pair.of("o", "ο"),
            Pair.of("'o", "ό"),
            Pair.of("`o", "ὸ"),
            Pair.of("<o", "ὁ"),
            Pair.of("<'o", "ὅ"),
            Pair.of("<`o", "ὃ"),
            Pair.of(">o", "ὀ"),
            Pair.of(">'o", "ὄ"),
            Pair.of(">`o", "ὂ"),
            // small upsilon
            Pair.of("u", "υ"),
            Pair.of("'u", "ύ"),
            Pair.of("`u", "ὺ"),
            Pair.of("~u", "ῦ"),
            Pair.of("<u", "ὑ"),
            Pair.of("<'u", "ὕ"),
            Pair.of("<`u", "ὓ"),
            Pair.of("<~u", "ὗ"),
            Pair.of(">u", "ὐ"),
            Pair.of(">'u", "ὔ"),
            Pair.of(">`u", "ὒ"),
            Pair.of(">~u", "ὖ"),
            Pair.of("\"u", "ϋ"),
            Pair.of("\"'u", "ΰ"),
            Pair.of("\"`u", "ῢ"),
            Pair.of("\"~u", "ῧ"),
            Pair.of("y", "υ"),
            Pair.of("'y", "ύ"),
            Pair.of("`y", "ὺ"),
            Pair.of("~y", "ῦ"),
            Pair.of("<y", "ὑ"),
            Pair.of("<'y", "ὕ"),
            Pair.of("<`y", "ὓ"),
            Pair.of("<~y", "ὗ"),
            Pair.of(">y", "ὐ"),
            Pair.of(">'y", "ὔ"),
            Pair.of(">`y", "ὒ"),
            Pair.of(">~y", "ὖ"),
            Pair.of("\"y", "ϋ"),
            Pair.of("\"'y", "ΰ"),
            Pair.of("\"`y", "ῢ"),
            Pair.of("\"~y", "ῧ"),
            // small omega
            Pair.of("^o", "ω"),
            Pair.of("^o|", "ῳ"),
            Pair.of("'^o", "ώ"),
            Pair.of("'^o|", "ῴ"),
            Pair.of("`^o", "ὼ"),
            Pair.of("`^o|", "ῲ"),
            Pair.of("~^o", "ῶ"),
            Pair.of("~^o|", "ῷ"),
            Pair.of("<^o", "ὡ"),
            Pair.of("<^o|", "ᾡ"),
            Pair.of("<'^o", "ὥ"),
            Pair.of("<'^o|", "ᾥ"),
            Pair.of("<`^o", "ὣ"),
            Pair.of("<`^o|", "ᾣ"),
            Pair.of("<~^o", "ὧ"),
            Pair.of("<~^o|", "ᾧ"),
            Pair.of(">^o", "ὠ"),
            Pair.of(">^o|", "ᾠ"),
            Pair.of(">'^o", "ὤ"),
            Pair.of(">'^o|", "ᾤ"),
            Pair.of(">`^o", "ὢ"),
            Pair.of(">`^o|", "ᾢ"),
            Pair.of(">~^o", "ὦ"),
            Pair.of(">~^o|", "ᾦ"),
            // small consonant
            Pair.of("b", "β"),
            Pair.of("g", "γ"),
            Pair.of("d", "δ"),
            Pair.of("z", "ζ"),
            Pair.of("k", "κ"),
            Pair.of("th", "θ"),
            Pair.of("k", "κ"),
            Pair.of("l", "λ"),
            Pair.of("m", "μ"),
            Pair.of("n", "ν"),
            Pair.of("ng", "γγ"),
            Pair.of("nk", "γκ"),
            Pair.of("nx", "γξ"),
            Pair.of("nkh", "γχ"),
            Pair.of("x", "ξ"),
            Pair.of("p", "π"),
            Pair.of("s", "ς"),
            Pair.of("sa", "σα"),
            Pair.of("ssa", "σσα"),
            Pair.of("c", "σ"),
            Pair.of("t", "τ"),
            Pair.of("ph", "φ"),
            Pair.of("kh", "χ"),
            Pair.of("ps", "ψ"),
            // punctuation
            Pair.of(",", ","),
            Pair.of(";", "·"),
            Pair.of(".", "."),
            Pair.of("?", ";"),
            Pair.of("d'", "δ'"),
            // white space
            Pair.of(" ", " "),
            Pair.of("\t", "\t"),
            Pair.of("\n", "\n"),
            Pair.of("\r\n", "\r\n"),
            // other symbols
            Pair.of("-", "-"),
            Pair.of("(", "("),
            Pair.of(")", ")"),
            Pair.of("[", "["),
            Pair.of("]", "]"),
            Pair.of("<", "<"),
            Pair.of(">", ">"),
            // multi-byte character
            Pair.of("あ", "あ")
        ).map(
            pair -> dynamicTest(
                String.format("\"%s\" -> \"%s\"", pair.getLeft(), pair.getRight()),
                () -> assertEquals(pair.getRight(), JplgrApi.toPolytonicText(pair.getLeft()))
            )
        );
    }

    @TestFactory
    Stream<DynamicTest> testToPolytoicWordList() {
        return Stream.of(
            Pair.of((String)null, Collections.emptyList()),
            Pair.of("", Collections.emptyList()),
            Pair.of("α", List.of("α")),
            Pair.of("δ'", List.of("δ'")),
            Pair.of("ὁ ἄνθρώπός τις", List.of("ὁ", "ἄνθρώπός", "τις"))
        ).map(
            pair -> dynamicTest(
                String.format("\"%s\" -> \"%s\"", pair.getLeft(), pair.getRight()),
                () -> assertEquals(pair.getRight(), JplgrApi.toPolytonicWordList(pair.getLeft()))
            )
        );
    }
}
